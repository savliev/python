# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

# --- вар.1 -------------------------------------------------

# def division(*args):
#     try:
#         dividend = int(input("Введите делимое "))
#         divider = int(input("Введите делитель "))
#         quotient = round((dividend / divider),3)
#         return quotient
#     except ZeroDivisionError:
#         return "Деление на ноль запрешено!"
# print(f"{division()}")

# ----- анонимная ф-ция-----------------------------------------
# a = int(input("Введите делимое число "))
# b = int(input("Введите делитель "))
# try:
#     print ( (lambda dividend, divider: dividend / divider) (a,b) )
# except ZeroDivisionError:
#     print("деление на ноль запрещено")

#2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как
# именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

# def profile(firstname, lastname, year, city, email, phone):
#     print(firstname, lastname, year, city, email, phone)
# profile(firstname= 'Вася,', lastname='Пупкин,', year=1982, city=', Караганда,', email='vasya@pupkin.ru,', phone='999-888-77-66')

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму
# наибольших двух аргументов.

# def my_func(a , b, c):
#     sorted ([a,b,c])
#     list = (sorted ([a,b,c]))
#     print (list)
#     sum = list[1] + list[2]
#     print(sum)
#
# my_func (4,6,3)

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

# --- вар.1 с использованием ** ------------
# def my_func(x, y):
#     return 1 / x ** abs(y)
# print(my_func(2, -2))

# --- вар.2 с использованием цикла ----------
# def my_func (x, y):
#     ex = x
#     for count in range (abs(y)-1):
#         ex = ex * x
#     print (1/ex)
#     return
#
# my_func(2,-2)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться
# к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ
# введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

# def sum ():
#     sum = 0
#     ex = False
#     while ex == False:
#         number = input('Введите числа через пробел - ').split()
#         res = 0
#         for element in range(len(number)):
#             if number[element] == 'q' or number[element] == 'Q':
#                 ex = True
#                 break
#             else:
#                 res = res + int(number[element])
#         sum = sum + res
#         print(f'Сумма чисел =  {sum}')
#     print(f'Окончательная сумма =  {sum}')
#
# sum()

# Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text. Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
# def int_func (*args):
#     word = input("Введите строку из слов, разделенных пробелом, в нижнем регистре ")
#     print(word.title())
#     return
# int_func()